name: Windows

on:
  push:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/Windows.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/Windows.yml'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  msvc:
    runs-on: windows-latest
    name: CMake v3.${{ matrix.cmake_version }}
    strategy:
      fail-fast: false
      matrix:
        cmake_version: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: tests
      
      - name: ‚¨áÔ∏è Setup CMake v3.${{ matrix.cmake_version }}
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ~3.${{ matrix.cmake_version }}
          ninjaVersion: ^1

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: configure
        with:
          mode: configure
          source_dir: './tests'
          install_prefix: '../install'
          configure_warnings: warning
          configure_warnings_as_errors: ''
          list_cache_variables: 'advanced_help'
          graphviz: './graph.dot'
          log_level: 'TRACE'
          log_context: true

      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_targets: |
            Main
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true

  msys2:
    runs-on: windows-latest
    name: CMake v3.${{ matrix.cmake_version }} ${{ matrix.system }} 
    strategy:
      fail-fast: false
      matrix:
        system: [ msys, mingw64, mingw32, ucrt64 , clang32, clang64 ]
        cmake_version: [25]
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: tests
      
      - name: ‚¨áÔ∏è Setup CMake v3.${{ matrix.cmake_version }}
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ~3.${{ matrix.cmake_version }}
          ninjaVersion: ^1

      - name: ‚¨áÔ∏è Setup MSYS2 (${{matrix.system}})
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.system}}
          path-type: minimal
          release: true
          update: true
          cache: true
          pacboy: >-
            cmake:p
            ninja:p
            ${{ (matrix.system=='clang32' || matrix.system=='clang64') && 'clang:p' || 'gcc:p' }}

      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        with:
          mode: configure
          generator: 'Ninja Multi-Config'
          install_prefix: '../install'
          binary_dir: '../build'
          source_dir: './tests'
      
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_targets: |
            Main
          build_verbose: true
  
      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true

  clang:
    runs-on: windows-latest
    name: clang-${{ matrix.version }}
    strategy:
      fail-fast: false
      matrix:
        version: [ 11.1.0, 12.0.1, 13.0.1, 14.0.6, 15.0.2 ]
        cmake_version: [25]

    steps:
      - uses: ammaraskar/gcc-problem-matcher@master

      - name: üì• Checkout
        uses: actions/checkout@v4
      
      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: tests
      
      - name: ‚¨áÔ∏è Setup CMake v3.${{ matrix.cmake_version }}
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1

      - name: ‚¨áÔ∏è Install Clang
        run: curl -fsSL -o LLVM${{ matrix.version }}.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-${{ matrix.version }}/LLVM-${{ matrix.version }}-win64.exe ; 7z x LLVM${{ matrix.version }}.exe -y -o"C:/Program Files/LLVM"

      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: configure
        with:
          mode: configure
          source_dir: './tests'
          install_prefix:  '../install'
          generator: 'Ninja Multi-Config'
          variables: |
            CMAKE_C_COMPILER="C:/Program Files/LLVM/bin/clang.exe
            CMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang++.exe

      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: false

  clang-cl:
    runs-on: windows-latest
    name: windows-2019 clang-cl-11 ${{ matrix.architecture }}
    strategy:
      fail-fast: false
      matrix:
        architecture: [ Win32, x64 ]
        cmake_version: [25]

    steps:
      - uses: ammaraskar/msvc-problem-matcher@master

      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: tests

      - name: ‚¨áÔ∏è Setup CMake v3.${{ matrix.cmake_version }}
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1

      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: configure
        with:
          mode: configure
          source_dir: './tests'
          install_prefix: '../install'
          generator: 'Visual Studio 17 2022'
          toolset: ClangCL
          platform: ${{ matrix.architecture }}
  
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          clean_first: true
          build_verbose: true
  
      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: false
