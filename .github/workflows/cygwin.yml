name: cygwin

on:
  push:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/cygwin.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/cygwin.yml'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  cygwin-gcc:
    runs-on: windows-latest
    name: cygwin (${{ matrix.compiler}},${{ matrix.generator }})
    env:
      CYGWIN: true
      CC: gcc
      CXX: g++

    strategy:
      fail-fast: false
      matrix:
        generator: ['MinGW Makefiles', 'MSYS Makefiles', 'Unix Makefiles','Ninja', 'Ninja Multi-Config']
        compiler:
          - gcc-g++=11.5.0-1
          - gcc-g++=12.4.0-3
          - gcc-g++=13.3.1+20250424-0.1
          - gcc-g++=14.2.1+20250425-0.1
          - gcc-g++=15.1.1+20250426-0.1
          - mingw64-x86_64-gcc-g++=11.4.0-1
          - mingw64-x86_64-gcc-g++=11.5.0-1
          - mingw64-x86_64-gcc-g++=12.4.0-1
          - mingw64-x86_64-gcc-g++=13.3.0-1
          - mingw64-x86_64-gcc-g++=14.2.0-1
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Checkout tests repository
        uses: actions/checkout@v5
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          packages: ${{ matrix.compiler }} cmake ninja
          add-to-path: false
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot

      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false

      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true

  cygwin-clang:
    runs-on: windows-latest
    name: cygwin (${{ matrix.compiler_type}}${{ matrix.compiler_version }},${{ matrix.generator }})
    env:
      CYGWIN: true
      CC: clang
      CXX: clang++
    strategy:
      fail-fast: false
      matrix:
        generator: ['MinGW Makefiles', 'MSYS Makefiles', 'Unix Makefiles','Ninja', 'Ninja Multi-Config']
        compiler_version: ['5.0.1-2','8.0.1-1']
        compiler_type: ['clang', 'mingw64-x86_64-clang']
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Checkout tests repository
        uses: actions/checkout@v5
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          packages: ${{ matrix.compiler_type }}=${{ matrix.compiler_version }} cmake ninja
          add-to-path: false
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot

      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false

      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true
