name: msys2

on:
  push:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/msys2.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/msys2.yml'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  cygwin:
    runs-on: windows-latest
    name: cygwin (${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        #generator: ['Unix Makefiles','Ninja', 'Ninja Multi-Config']
        generator: ['toto']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests
      - name: ‚¨áÔ∏è Setup Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          packages: gcc cmake ninja

      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true
  msys2:
    runs-on: windows-latest
    name: ${{ matrix.system }} (${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        system: [ msys, mingw64, ucrt64, clang64 ]
        #generator: ['MSYS Makefiles','MinGW Makefiles','Unix Makefiles','Ninja', 'Ninja Multi-Config','Visual Studio 17 2022','NMake Makefiles']
        generator: ['toto']
        exclude:
          - system: msys
            generator: 'MSYS Makefiles'
          - system: msys
            generator: 'MinGW Makefiles'
          - system: msys
            generator: 'MVisual Studio 17 2022'
          - system: msys
            generator: 'NMake Makefiles'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup MSYS2 (${{matrix.system}},${{matrix.generator}})
        uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: ${{matrix.system}}
          path-type: minimal
          release: true
          update: true
          cache: true
          install: |
            ${{ (matrix.system=='msys') && 'cmake gcc' || 'pacman'}}
            ${{ (matrix.generator=='Ninja' || matrix.generator=='Ninja Multi-Config') && 'ninja' || 'make' }}
          pacboy: |
            ${{ (matrix.system!='msys' && (matrix.generator=='Ninja' || matrix.generator=='Ninja Multi-Config')) && 'ninja:p cmake:p' || 'binutils:p'}}
            ${{ (matrix.system!='msys' && matrix.generator!='Ninja' && matrix.generator!='Ninja Multi-Config') && 'make:p cmake:p' || 'binutils:p' }}
            ${{ (matrix.system=='clang64') && 'clang:p' || 'gcc:p' }}
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true
