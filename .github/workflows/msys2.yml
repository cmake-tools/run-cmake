name: msys2

on:
  push:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/msys2.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/msys2.yml'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  msys:
    runs-on: windows-latest
    name: msys (${{ matrix.compiler }},${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc,clang]
        generator: ['MSYS Makefiles','MinGW Makefiles','Unix Makefiles','Ninja', 'Ninja Multi-Config']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup MSYS2 (msys)
        uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: msys
          path-type: minimal
          release: true
          update: true
          cache: true
          install: gcc ninja make
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.compiler=='gcc' && 'g++' || 'clang++' }}
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true

  ucrt64:
    runs-on: windows-latest
    name: ucrt64 (${{ matrix.compiler }},${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc,clang]
        generator: ['MSYS Makefiles','MinGW Makefiles','Unix Makefiles','Ninja', 'Ninja Multi-Config']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup MSYS2 (ucrt64)
        uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: ucrt64
          path-type: minimal
          release: true
          update: true
          cache: true
          pacboy: ninja:p cmake:p clang:p gcc:p
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.compiler=='gcc' && 'g++' || 'clang++' }}
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true

  clang64:
    runs-on: windows-latest
    name: clang64 (${{ matrix.compiler }},${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc,clang]
        generator: ['MSYS Makefiles','MinGW Makefiles','Unix Makefiles','Ninja', 'Ninja Multi-Config']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup MSYS2 (clang64)
        uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: clang64
          path-type: minimal
          release: true
          update: true
          cache: true
          pacboy: ninja:p cmake:p clang:p gcc:p
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.compiler=='gcc' && 'g++' || 'clang++' }}
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true


  mingw64:
    runs-on: windows-latest
    name: mingw64 (${{ matrix.compiler}},${{ matrix.generator }})
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc,clang]
        generator: ['MSYS Makefiles','MinGW Makefiles','Unix Makefiles','Ninja', 'Ninja Multi-Config']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout tests repository
        uses: actions/checkout@v4
        with:
          repository: cmake-tools/runs.test
          path: ./tests

      - name: ‚¨áÔ∏è Setup MSYS2 (mingw64)
        uses: msys2/setup-msys2@v2
        id: msys2
        with:
          msystem: mingw64
          path-type: minimal
          release: true
          update: true
          cache: true
          pacboy: ninja:p cmake:p clang:p gcc:p
      - name: ‚öôÔ∏è run-cmake (configure)
        uses: ./
        id: 'configure'
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.compiler=='gcc' && 'g++' || 'clang++' }}
        with:
          mode: configure
          generator: ${{matrix.generator}}
          install_prefix: ../install
          binary_dir: ../build
          source_dir: ./tests
          graphviz: ./dots/dependencies.dot
      - uses: actions/upload-artifact@v4
        name: üì§ Upload dot files
        with:
          name: dot_${{ github.workflow }}_${{ matrix.generator }}_${{ matrix.cmake_version }}
          path: ./dots/*
          if-no-files-found: warn
          retention-days: 90
          compression-level: 0
          overwrite: true
          include-hidden-files: false
      - name: üõ†Ô∏è run-cmake (build)
        uses: ./
        id: build
        with:
          mode: build
          config: Debug
          clean_first: true
          build_verbose: true

      - name: üì• run-cmake (install)
        uses: ./
        id: install
        with:
          mode: install
          install_verbose: true
